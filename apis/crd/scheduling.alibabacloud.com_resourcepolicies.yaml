---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.5
  name: resourcepolicies.scheduling.alibabacloud.com
spec:
  group: scheduling.alibabacloud.com
  names:
    kind: ResourcePolicy
    listKind: ResourcePolicyList
    plural: resourcepolicies
    singular: resourcepolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourcePolicy is the Schema for the resourcepolicies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ResourcePolicySpec defines the desired state of ResourcePolicy
            properties:
              consumerRef:
                description: ObjectReference contains enough information to let you
                  inspect or modify the referred object.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              ignorePreviousPod:
                default: false
                type: boolean
              ignoreTerminatingPod:
                default: true
                type: boolean
              matchExpressions:
                items:
                  description: |-
                    A label selector requirement is a selector that contains values, a key, and an operator that
                    relates the key and values.
                  properties:
                    key:
                      description: key is the label key that the selector applies
                        to.
                      type: string
                    operator:
                      description: |-
                        operator represents a key's relationship to a set of values.
                        Valid operators are In, NotIn, Exists and DoesNotExist.
                      type: string
                    values:
                      description: |-
                        values is an array of string values. If the operator is In or NotIn,
                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                        the values array must be empty. This array is replaced during a strategic
                        merge patch.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                  required:
                  - key
                  - operator
                  type: object
                type: array
              matchLabelKeys:
                items:
                  type: string
                type: array
              preemptPolicy:
                default: AfterAllUnits
                enum:
                - BeforeNextUnit
                - AfterAllUnits
                type: string
              selector:
                additionalProperties:
                  type: string
                type: object
              strategy:
                type: string
              units:
                items:
                  properties:
                    max:
                      format: int32
                      type: integer
                    nodeSelector:
                      additionalProperties:
                        type: string
                      type: object
                    podAnnotations:
                      additionalProperties:
                        type: string
                      type: object
                    podLabels:
                      additionalProperties:
                        type: string
                      type: object
                    resource:
                      type: string
                    scaleInWeight:
                      format: int32
                      type: integer
                    spotInstance:
                      type: boolean
                  type: object
                type: array
              whenTryNextUnits:
                properties:
                  policy:
                    default: LackResourceOrExceedMax
                    enum:
                    - TimeoutOrExceedMax
                    - ExceedMax
                    - LackResourceOrExceedMax
                    - LackResourceAndNoterminating
                    - Timeout
                    type: string
                  timeout:
                    description: if policy is TimeoutOrExceedMax and timeout is not
                      set, we will see this timeout as 15 min
                    type: string
                type: object
            type: object
          status:
            description: ResourcePolicyStatus defines the observed state of ResourcePolicy
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
